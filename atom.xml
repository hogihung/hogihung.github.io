<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Old Guy, New Trick]]></title>
  <link href="http://hogihung.github.io/atom.xml" rel="self"/>
  <link href="http://hogihung.github.io/"/>
  <updated>2014-03-29T20:26:57-04:00</updated>
  <id>http://hogihung.github.io/</id>
  <author>
    <name><![CDATA[Ho Gi Hung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[My First Rake Task]]></title>
    <link href="http://hogihung.github.io/blog/2014/03/29/my-first-rake-task/"/>
    <updated>2014-03-29T20:13:12-04:00</updated>
    <id>http://hogihung.github.io/blog/2014/03/29/my-first-rake-task</id>
    <content type="html"><![CDATA[<p>At my day job we primarly use Perl for both our scripting and tool type applications as well as using it with a splatter of PHP for some of our web page applications.  I&rsquo;m trying to get Ruby, and Rails, in the door and see if I can convert others over to Ruby.  I must confess, it is a steep upward battle.</p>

<p>However, I do have a web application on our development server and am preparing to deploy it to production.  It is a fairly simple web application that has three models and will enable us to manage the data elements of our Out-of-Band equipment and the connected devices.</p>

<p>When I first started the development, I manually created some test records.  Then I added a handful more via the seeds.rb file.  But when it came time to populating the database with real data, I needed a better solution.  I had compiled some data in Excel files with over 400 out-of-band devices and over 5,000 connected devices.  No way I was going to manually enter all of those.</p>

<p>This was earlier in the week, and luckily I was able to ask some of the gurus at our weekly Code &amp; Coffee how I could tackle this.  Micah suggested I use the CSV library in Ruby and see about populating the data that way.  He gave me a great nudge in the right direction.</p>

<p>I was fumbling around looking for answers when I saw some information about creating rake tasks.  So I studied up, and created the following rake file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require 'csv'
</span><span class='line'>
</span><span class='line'>oobs_file = "/path/to/file/oob_devices.CSV"
</span><span class='line'>devices_file = "/path/to/file/connected_devices.CSV"
</span><span class='line'>
</span><span class='line'>namespace :oob_import do
</span><span class='line'>  task :oobs =&gt; :environment do
</span><span class='line'>    Oob.delete_all
</span><span class='line'>    CSV.foreach(oobs_file, headers: true) do |row|
</span><span class='line'>      p row
</span><span class='line'>      Oob.create!(row.to_hash)
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  task :devices =&gt; :environment do
</span><span class='line'>    Device.delete_all
</span><span class='line'>    CSV.foreach(devices_file, headers: true) do |row|
</span><span class='line'>      oob = Oob.find_by_name("#{row[0]}")
</span><span class='line'>      oob.devices.create!(name: "#{row[1]}", pri_port: "#{row[2]}", active: "#{row[3]}", updated_by: "#{row[4]}")
</span><span class='line'>
</span><span class='line'>      p "Oob_ID: #{oob.id}, name: #{row[1]}, pri_port: #{row[2]}, active: #{row[3]}, updated_by: #{row[4]}"
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  task :all =&gt; [:oobs, :devices] do
</span><span class='line'>    puts "Refreshing Oob and Device Models"
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>To import my data, I executed the rake task as follows:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake oob_import:oobs
</span><span class='line'>rake oob_import:devices</span></code></pre></td></tr></table></div></figure>


<p>I could have used the taks, <em>oob_import:all</em> but I wanted to work in two steps so I could watch for errors and fix things while I was building this file.</p>

<p>I can&rsquo;t properly convey the joy and happiness I felt when I saw this new tool work!  It really made my day, especially as it took me a couple of hours of research, trial and error.  But this will make things really easy for me when I move the application to production.</p>

<p>Note that I have the code that starts with &ldquo;p&rdquo; in there so I have a nice visual of how the task is running.  If you don&rsquo;t need that visual confirmation, you could remove those two lines of code.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Week 2 and a half at Bloc]]></title>
    <link href="http://hogihung.github.io/blog/2014/03/29/week-2-and-a-half-at-bloc/"/>
    <updated>2014-03-29T10:02:23-04:00</updated>
    <id>http://hogihung.github.io/blog/2014/03/29/week-2-and-a-half-at-bloc</id>
    <content type="html"><![CDATA[<p>The first week of my training at Bloc went by very fast. For the most part it was a review of information/knowledge I had already gained, but was still worth it.  I had wanted to create another blog post earlier, but the completion of the second block took longer than I had anticipated.</p>

<p>So here we are, about about 2.5 weeks in. The second block, titled Rails Foundation, should take one about 40 hours.  At least that is the estimated time for completion.  If I wasn&rsquo;t working full-time, maybe I could have completed this block in one week.</p>

<p>The Rails Foundation block is composed of 20 checkpoints.  We learned a lot of concepts, and habits in those checkpoints.  There was some review for me, for example the lesson introduced the Devise gem.  I&rsquo;ve played with this a little bit so had some comfort with that checkpoint.  Though I did learn some new things related to Devise.</p>

<p>A totally new experience for me was when did the Authorization checkpoint, and was introduced to the Pundit gem.  I would say that Pundit is a little bit like CanCan.  I&rsquo;ve dabbled with CanCan a little bit, but I find Pundit to be pretty good.  I&rsquo;ll have a tough choice to make when it comes time for my Capstone project.  Should I go with Pundit, or revist CanCan (or CanCanCan.)</p>

<p>Another topic that I found useful, because it helped me with a task at my day job, was the lesson on Seeding.  While our main environment at work is Perl, I&rsquo;m slowing trying to sneak in some Ruby and Rails.  Leveraging some of the knowledge gained in the Seeding lesson, I was able to expand on that knowledge and compose my first rake task for populating my models with data in CSV files.  Ok, I&rsquo;m a bit off topic, steer back John!</p>

<p>There were two area where my progress slowed to a crawl in the second block.  The first was related to uploading images.  Recently Bloc added a Rails 4.x track and it looks like some of the lesson code examples are missing.  I wasn&rsquo;t able to see my Choose File option for uploading an image.  A trip to the Chat Room and a small wait for my turn, and my issue was solved by Xander.  Xander is great!  Everytime I&rsquo;ve had a question, he seems to be in the chat room and helps me out.</p>

<p>The second area I had trouble with was nesting.  I&rsquo;ll admit that I&rsquo;m still 100% solid with what I&rsquo;ve learned about nesting, but I&rsquo;m confident things will become clearer as I see and utilize more code.  During one of the lessons related to this nesting of Topics, Posts and Comments, I got stuck real bad.  I went to the chat room for help, but it was just at the time for that shift to end for the day.  Xander stayed for a few minutes and helped a lot.  But I was still stuck.</p>

<p>I was worried that all the changes I had made may have broken something.  So I fired off an email to my mentor to let him know I was stuck and to be prepared for a nice long chat the next day when we were scheduled to meet.  We meet the next day and he helped get me fixed in less than 5 minutes.  My eyes were so focused around the code and didn&rsquo;t &ldquo;see&rdquo; the code.  I had several silly mistakes.  For example I used the plural version instead of singular for a particular item/method.  Or I had a misplaced period.  And other issue, I had the order of a ) and a period mixed up.  Simple things for the trained eye.  It was great to have the mentor there to help me through what I thought was a major <em>fsk</em> up on my part.</p>

<p>Needless to say, I made some more punctuation type mistakes on the remaing checkpoints in this block.  But since I suffered so much earlier in the block, I was much more aware of what to look for.  The hard part for me now is when I see an error message, and know basically what is wrong, I don&rsquo;t yet have the experience to provide the solution.  But I&rsquo;m eagerly working at improving my problem solution skills.  :)</p>

<p>As I write this post, again about 2.5, well maybe 2.75 weeks in, I&rsquo;m now on the third Block &ndash; Features / Testing / Javascript.  This block is also estimated to take 40 hours.  There are 10 checkpoints and I&rsquo;ve completed the first 4 so far.  But now I&rsquo;m really entering an area of unfamiliarity.  Upcoming in this block is RSpec and Ajax.  Two areas that have close to zero amount of knowledge and experience.</p>

<p>Stay tuned for my next update.  This coming week I will be going to Ancient City Ruby so I&rsquo;m not sure if I&rsquo;ll have the time to complete the third block.  But once I have completed it, I will post my thoughts here.</p>

<p>Happy Learning!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Week At Bloc]]></title>
    <link href="http://hogihung.github.io/blog/2014/03/15/first-week-at-bloc/"/>
    <updated>2014-03-15T19:46:34-04:00</updated>
    <id>http://hogihung.github.io/blog/2014/03/15/first-week-at-bloc</id>
    <content type="html"><![CDATA[<p>About two weeks ago I was trying to decide which on-line web developer education solution I would enroll in.  The decision was not easy.  Along with the weekly time requirements, roughly 25 hours per week, the financial cost is nothing to shrug off.  In the end I choose Bloc (<a href="http://www.bloc.io">http://www.bloc.io</a>)</p>

<p>My training at Bloc started this past Monday, March 10th.  The Bloc course runs about 12 weeks, broken down into four segments:</p>

<pre><code>1.  Environment Setup / Programming with Ruby
2.  Rails Foundation
3.  Features/Testing/Javascript
4.  Project Challenges
</code></pre>

<p>I&rsquo;ve just finished item 1 &ndash; Environment Setup / Programming with Ruby.  When I read the description of this section my first thought was, &ldquo;this should be easy.&rdquo;  I have been exploring Ruby and Rails for almost a year.  I&rsquo;ve installed RVM on several computers, worked with GitHub and Heroku, as well as several introductory tutorials.</p>

<p>And many of sub-sections in this first track were a nice and quick completion for me.  But, through each sub-section, I did learn something new.  For example, while working on setting up an app on Heroku, I learned how to add support for New Relic.  I&rsquo;ve seen ads and mention of New Relic a lot while learning Rails but never took a look at it.  Now I&rsquo;ve had a nice gentle introduction.</p>

<p>There are 20 sub-section to Environment Setup / Programming with Ruby.  I felt good and confident as I traversed through them one by one.  I was slowed down briefly in sub-section 14 &ndash; Arrays.  One of the exercises there introduced me to new code and techniques I had not yet experienced.  I love learning new stuff!</p>

<p>As I rounded out this section, I found myself staring at my nemesis &ndash; Blocks.  I don&rsquo;t know why, but I seem to have a mental <em>block</em> when it comes to Blocks (as well as Procs and Lambdas.)  This section took me a bit and I had to reach out for help.</p>

<p>In the Bloc program, each student has a mentor.  We have around 3 calls a week with our mentors.  When I got stuck it was after I had last talked with my mentor.  Not a problem &ndash; Bloc also has a staffed on-line chat room.  I popped in to the chat room and asked a question.  One of the staff there gave me a nudge.  After about 30 minutes I was still stuck.  I had gotten further, but still hadn&rsquo;t solved the problem.  Another question/discussion in the chat room and it became clear.  I was able to complete the lesson.  <strong>Happy Dance!</strong></p>

<p>I look forward to my next call with my mentor (tomorrow) and starting my next section &ndash; Rails Foundation.  As I progress through each section I&rsquo;ll return here to provide updates.</p>

<p>Happy Learning!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bad CS vs Good CS]]></title>
    <link href="http://hogihung.github.io/blog/2014/03/04/bad-cs-vs-good-cs/"/>
    <updated>2014-03-04T21:16:26-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/03/04/bad-cs-vs-good-cs</id>
    <content type="html"><![CDATA[<p>Why is bad customer service still an issue in the present day?  I realize we had to put up with it in the past whether it was due to lack of competition, or a lack of a way to widely communicate our experience.  But in the age of the Internet, and lightspeed communications, what the hell?</p>

<p>I know this isn&rsquo;t about programming, but every once in a while I will chat about general topics.  This past week I got to experience both bad and good customer service.  I was shocked actually becuase the bad service was from American Express.  I&rsquo;ve never had an issue with them until this past week.  I&rsquo;ve been an American Express member for over 20 years.  Last year and the year before I used my card for purchases in excess, well let&rsquo;s just say greater than $20k each year.  I make my payments online via the American Express website.  This past time I made an error.  I didn&rsquo;t catch that I used my business account instead of my personal account.  When Amex went to transfer the money, there wasn&rsquo;t enough in the business account.  They emailed me a the next day.  A day after that I got a letter from my credit union letting me know that Amex tried to transfer money and since I didn&rsquo;t have enough, they hit me with a fee.</p>

<p>So I called Amex.  First person said, &ldquo;&hellip;sorry, nothing I can do.  We will keep trying to hit that account up to three times.&rdquo;  Oh and they will charge me a fee each time it fails.  And, my bank will charge me a fee each time it fails.  Now I realize I made a mistake.  But seriously, Amex couldn&rsquo;t cancel the transaction?  I escalated to a supervisor and got the same response.  I told the supervisor that I wanted to file a formal complaint.  Their response &ndash; &ldquo;&hellip;noted, but there is nothing we can do.&rdquo;  ARGH!</p>

<p>So I called my credit union (bank) to see if I would have better luck.  They were a little confused at first because they thought I didn&rsquo;t want to pay.  I did want to pay, but I needed to use the right account and I didn&rsquo;t want to keep getting dinged by both sides.  The Vystar rep helped me out and provided a solution.  1.)  File a stop payment to block the Amex transaction.  2.) Helped me transfer the money Amex was trying to get from my personal account to business account.  The reason being was in case the block didn&rsquo;t take affect quick enough, there would be money for Amex to get and no more penalty fees.  In addition, the Vystar rep reversed the charges/fees that occurred from their end.  Now that is Customer Service!</p>

<p>But wait, there is more!  After providing a solution, the rep said &ldquo;&hellip;you know we have a promo now for our bank card.  Would you like to get one?&rdquo;  And I did.  All future transactions where I used to use my Amex will now be done with my Vystar Card.</p>

<p>What I find worse than bad customer service, is customer service that just ignores you.  Before I began my journey with Ruby and Rails, I was trying to build upon my knowledge of PHP.  I purchased a book, <em>&ldquo;Easy PHP Websites with The Zend Framework,&rdquo;</em> by W. Jason Gilmore.  I found this book not very good &ndash; a little better than the phpCake one I had tried, but not worthy of the money I had spent.  I reached out on several occasions to get a refund.  I was ignored.  Contrast that horrible experience to a good one that happened this week.  I had heard about the book <em>Geocoding on Rails</em> by the folks at Thoughtbot.  I was very excited because from what I had heard, this book might help with a hurdle I had been trying to leap in my own app.  I got the book and tried to follow.  Had some trouble.  Tried again a few other times when I thought I was more alert.  Still didn&rsquo;t help.  Then I came to realize that I had made a mistake &ndash; I thought the book would take the reader from start to finish of a Geolocation Rails app.  But the book is geared more so to explain the different concepts and ways to approach Geolocation in a Rails app.  In other words &ndash; it was above my level, above my pay grade.</p>

<p>I reached out to Thoughtbot and asked for a refund.  Not only did they promptly refund my money, but they encouraged me to revisit once I get a bit further along in my Ruby studies.  I&rsquo;m sure the book, and some others they offer, will be of better value to me once I gain more knowledge.</p>

<p>Customer Service need not be hard.  I&rsquo;m not saying the customer is always right.  But the customer pays the bills.  In the case of Amex, I would have been ok if all they had said was: &ldquo;&hellip;no problem, I&rsquo;ll stop that transaction for you.&rdquo;  Reversing the penalty would have been a bonus, but I&rsquo;d be ok with them just stopping the offending transaction.</p>

<p>Amex, you&rsquo;ve lost a long time customer.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Slice of Raspberry Pi]]></title>
    <link href="http://hogihung.github.io/blog/2014/03/01/slice-of-raspberry-pi/"/>
    <updated>2014-03-01T08:53:44-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/03/01/slice-of-raspberry-pi</id>
    <content type="html"><![CDATA[<p>Us geeks love our gadgets.  I had heard just bits and pieces about something called a Raspberry Pi.  I hadn&rsquo;t given much thought to it at first.  A brief glance at a web page or two but it didn&rsquo;t interest me at that time.  I was having a hard time picturing what I could do with it.</p>

<p>What peaked my interest was a re-introduction to the Pi, and other similar devices, at Ruby Conf 2013 (Miami.)  The gadgets like the Raspberry Pi were used in some of the conference talks.  I also got hooked on the Sphero, but is another story.</p>

<p>After Ruby Conf I started researching the Pi some more.  I came across a site that seemed to have a lot about the Raspberry Pi, and other geek related topics &ndash; <a href="http://www.element14.com/community/community/raspberry-pi/getstartedwithpi?ICID=getstartpi-videodoc5-getstartedlink">http://www.element14.com/community/community/raspberry-pi/getstartedwithpi?ICID=getstartpi-videodoc5-getstartedlink</a></p>

<p>I watched some of the videos on the element14 site and my brain was invigorated.  The wheels started spinning.  So I ordered one of the Raspberry Pi Starter Pack.  In addition to the Pi, it came with a memory card, jumpers, USB WiFi, bread board, etc.  I grabbed mine from a site I found on the element14 page &ndash; <a href="http://www.adafruit.com/category/105">http://www.adafruit.com/category/105</a>  I added on the USB Wifi and a cool ruler.</p>

<p>I&rsquo;ve only just begun to tinker with it, but so far it has been fun.  Using the NOOB tool, I loaded up a 4GB card with the Pi version of the XBMC.</p>

<p>I plan on doing some more experimentation.  I picked up 4 new SD cards, two 8GB and two 16GB so I can try different loads and setups.  Plus I&rsquo;m getting the kids involved so they can learn a little bit of geeky stuff.</p>

<p>Recommendation &ndash; grab a slice of pie, Raspberry Pi!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In search of mentor]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/28/in-search-of-mentor/"/>
    <updated>2014-02-28T17:15:32-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/28/in-search-of-mentor</id>
    <content type="html"><![CDATA[<p>When I began my journey to become a better programmer, I didn&rsquo;t have a clear path.  I had been programming in Perl for my day job, and I have ideas sketched out for some web and mobile apps.  Most the programming I do at work is for single task automation or data lookup.  I want to be a better programmer at work, and I want to see my ideas in use for myself and others.</p>

<p>I reached out to a friend of mine in early 2012.  I shared with him some of my buisness and software ideas.  He has a lot of experience as an entrepreneur, and as a software developer.  When I finally settled on working on my software projects, we had several discussion sessions together and he helped point me in a direction.  I started to learn the Zend framework as I had some previous experience hacking away at php based websites.  My progress went slow, buy my friend, Bill, helped to gently nudge me in the appropriate direction and answer my battery of questions.  I&rsquo;m sure it must have been tough for him as I had a lot of questions and kept switching what I was trying to focus on.</p>

<p>Fast forward to about this time in 2013.  I was a little frustrated with myself and slow progress.  It took me a real long time to get the user registration and login part of my app working.  I realized that I had major gaps in core programming knowledge.  Using Amazon.com I found some books to study (see my post &ldquo;To Book or Not to Book&rdquo;.)  While reading one of these books I ran into a guy who was the catalyst in rebooting my programming journey.  He, Shane, introduced me to Ruby on Rails.</p>

<p>Shane told me about some online resources to help get me started &ndash; the ones at CodeSchool and RailsCasts.  I went back to Amazon and ordered the Hartl book.  With my nose in the books, laptop comfortably on my lap, I started studying Ruby and Rails.  The beginner resources I came across were excellent.  I found a much better selection of books and online resources from the Ruby community, especially compared to PHP which I had previously been studying.  My &ldquo;home schooling&rdquo; was going well.</p>

<p>What took me over a month to learn and do in PHP, the user registration/login code of my website, I was able to learn and complete in a weekend using Rails.  For me, learning Ruby and Rails is actually fun.  I feel that I have been able to comprehend the basics, and some intermediate stuff pretty well just by reading or watching online videos (both free and paid for.)  But I&rsquo;ve noticed that I&rsquo;m starting to hit some more challenging concepts and material.</p>

<p>My application has some models that aren&rsquo;t as simple as a one-to-one, or one-to-many relationship.  My app needs to interact with the user for more than just simple data entry. I&rsquo;m seeing that I need to learn more about JavaScript/CoffeeScript and jQuery.  I&rsquo;m having issues with Geolocation.  The concepts are getting a little more complicated for me.  I need someone to talk to and work through these challenges.  I need a more structured learning environment where I&rsquo;m able to ask questions for topics I do not understand.  Thus my search for more knowledge.</p>

<p>Since I work full time, I had some contraints to work within.  Either I needed to find some programming courses at a local college, that I could attend at night, or find some on-line resource.  While I find my subscriptions to CodeSchool, RailsCasts and PluralSight useful, the draw back is I can&rsquo;t ask questions when I get stuck.  Off to Google I went to start my search.  I was overwhelmed by how many different solutions there are.  One can review a pretty good list of solutions at the Quora site <a href="http://www.quora.com/Programming-Bootcamps/What-are-the-short-term-3-12mo-development-bootcamps-academies-around-the-world">http://www.quora.com/Programming-Bootcamps/What-are-the-short-term-3-12mo-development-bootcamps-academies-around-the-world</a></p>

<p>Some of the more popular sites I found were, in no particular order: <a href="http://www.launchacademy.com/">http://www.launchacademy.com/</a>  <a href="http://www.appacademy.io/">http://www.appacademy.io/</a> <a href="http://www.thinkful.com/">http://www.thinkful.com/</a>  <a href="http://www.gotealeaf.com/">http://www.gotealeaf.com/</a>  <a href="http://devbootcamp.com/">http://devbootcamp.com/</a> <a href="https://www.bloc.io/">https://www.bloc.io/</a>  <a href="https://training.bignerdranch.com">https://training.bignerdranch.com</a>  <a href="http://www.hackreactor.com/">http://www.hackreactor.com/</a> and <a href="https://learn.thoughtbot.com/">https://learn.thoughtbot.com/</a></p>

<p>Off the above though, only four seemed to fit my criteria of being able to attend on-line, at my own time: Bloc, Thinkful, Teaeaf Academy and Thoughbot.  The pricing for these courses are roughly in the same price range, with Bloc being the most expensive.  But Bloc costs more for a good reason I feel &ndash; more time with a mentor.  I talked with people from Bloc and Thinkful &ndash; both of them had a live session to code with a mentor.  Bloc seems more proactive in having numerous info sessions and answering questions from potential students.</p>

<p>Through my research and conversations, I&rsquo;ve narrowed my search down to Bloc and Tealeaf.  Tealeaf is getting a strong consideration because one of their founders is a Hashrocket alumni which I found out about after talking with two folks from Hashrocket.  But Bloc is the leader and I&rsquo;ve pre-registered with them.  I wish Tealeaf had hosted some info sessions so I could get a taste of how they work.  I&rsquo;m still considering them as their course is broken down into 3 components, with the last one covering advanced concepts.  Upon completion of Bloc, I may enroll in that third course.</p>

<p>I&rsquo;ve had exposure to three mentors at Bloc.  Each one has impressed me.  Keep an eye out for my follow up posts regarding how my training goes with Bloc.  I have a mentor in mind, but I will not know for sure until I get through the formal registration and enrollment.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drop the Bass (Fat)]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/26/drop-the-bass/"/>
    <updated>2014-02-26T10:39:26-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/26/drop-the-bass</id>
    <content type="html"><![CDATA[<p>I ran into a former co-worker the other day &ndash; someone that I hadn&rsquo;t seen since I left my previous assignment back in 2008.  They looked at me in a surprising way and at first I wasn&rsquo;t sure why.  Had I changed that much in a few short years?  Then it hit me,
the last time I saw this person, I was 60 pounds heavier!</p>

<p>Back in 2008 I had probably hit the height of feeling like crap.  The job I was in was stressing me out and then we found out that our contract was not going to be renewed.  Although the job was not making me happy, the thought of being unemployed was worse.  Tack on to that, I kept gaining weight over the years and I was having health problems.</p>

<p>I kept getting sick and having a hard time breathing.  I was coughing all the time, and though I deny it, the wife says my snoring could rattle the dishes.  I saw several doctors, and specialists.  They ran tests on me, put me in some type of chamber to measure how I breathed.  Nothing was fixing my problem.  The only relief came from cough syrup, assorted pills and some breathing medication.</p>

<p>In 2009 I started a new job, one that I&rsquo;m still at and very happy with.  The stress from the old job was gone, but the fat was still sticking around.  We had a family trip planned to go to Hong Kong in December.  Hong Kong is a very dynamic city and I wouldn&rsquo;t have my crutch of a car/truck to shuttle my fat ass around with.  I&rsquo;d have to walk and use the mass transit.</p>

<p>In August of 2009 I finally admitted to myself, partly because I saw that I couldn&rsquo;t keep up with my kids and partly because I saw a picture of myself, that I really needed to loose weight.  I did some research and came across a program called &ldquo;Quick Weight Loss&rdquo; which can be found at: <a href="http://quickweightloss.net">http://quickweightloss.net</a>  They had locations in some cities where you could go for consultation and get advice on what plan(s) to use.  But I wasn&rsquo;t located in any of those cities.  Luckily, they had an at-home program.  I signed up and started the plan in September 2009.</p>

<p>By the time we left for Hong Kong, in mid-December, I had lost 50 pounds and was feeling great!  I only gained 2 pounds while on vacation in Hong Kong, though I ate whatever I wanted.  One gets plenty of excercise getting around that city.  When I returned to the states, I went back on my program and lost another 10 pounds for a total loss of 60 pounds.</p>

<p>Fast forward to 2013.  I have gained a little of the weight back.  We had a family cruise this past December, and I ate a lot of great food.  I&rsquo;ve lost some of that weight on my own.  Occasionlly I&rsquo;ll jumpstart my weight correction by going back on the QWL plan.  Thankfully though, it is usually just for 2 weeks so I can loose that naughty weight and get back to my desired numbers.</p>

<p>Did I mention all those health problems I was having are now gone?  Not only did a loose those pesky pounds, I also lost all of the health problems I was having.  And although I still say that I don&rsquo;t snore, my wife says that it is much &ldquo;lighter&rdquo; than it was.</p>

<p>Working in the tech field may seem to present challenges in staying fit.  We basically sit all day to earn a living.  But I&rsquo;m encouraging you to watch your weight and loose those pesky pounds.  While at work, stand up every 30-45 minutes and stretch out.  Stay standing for 5-10 minutes and get then get back to work.  Maybe get one of those desks that can go up and down &ndash; I have my eye on this one: <a href="http://www.nextdesks.com/terra">http://www.nextdesks.com/terra</a></p>

<p>So, get up and Drop that Bass, er, Fat!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dissect A Method - Part II]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/24/dissect-a-method-part-ii/"/>
    <updated>2014-02-24T20:48:10-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/24/dissect-a-method-part-ii</id>
    <content type="html"><![CDATA[<p>About a week ago I created the &ldquo;Dissect A Method&rdquo; post.  Near the end of that post
I felt like I left things hanging.  So I&rsquo;m going to try and clear things up.  I ended that post mostly because I wasn&rsquo;t comfortable with what is going on in the line of code that looks like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>decimal.gsub!(/\d{3}(?!$)/,'\0,')</span></code></pre></td></tr></table></div></figure>


<p>I did a some research &ndash; a little dive into the API, <a href="http://apidock.com/ruby/String/gsub">http://apidock.com/ruby/String/gsub</a> and a trip over to a cool RegEx site, <a href="http://rubular.com/">http://rubular.com/</a></p>

<p>If you would like follow along, go to the rubular site and enter the following into the text box for &lsquo;Your regular expression:&rsquo;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>\d{3}(?!$)</span></code></pre></td></tr></table></div></figure>


<p>In the text box for &lsquo;Your test string:&rsquo; we will try a few different values.  Go ahead and test a few numbers, one at a time, e.g. 45789  AND  1024  AND  54 AND  5251350</p>

<p>Observe your results in the &lsquo;Match result:&rsquo; text box.  So the beginning of our regex is composed of \d{3} which says that we are looking for 3 digits &ndash; any number 0 thru 9.  The next part is what had me stuck.  I seemed to recall that the $ meant End of line, and we can confirm that by looking at the RegEx quick reference on the rubular site.</p>

<p>But what heck is this ?! stuff?  These two characters mean Negative lookahead.  So we are going to the end of the line of the string and then looking <em>backwards</em> to get a group of three digits.</p>

<p>Ok, so what does that last part mean, the &lsquo;\0,&rsquo; ?  Taking a look on the apidock site, I found an explanation &ndash; Interpolating.  For example:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># replace /ll/ with itself
</span><span class='line'>'hello'.gsub(/ll/, '\0') # returns 'hello'
</span><span class='line'>'hello'.gsub(/ll/, "\0") # returns 'he\000o'</span></code></pre></td></tr></table></div></figure>


<p>Putting the pieces together, if matched, we would grab some digits, and replace them with the same digits <em>plus</em> a comma, thus helping us to create a pretty integer.</p>

<p>Using a combination of the rubular site, and irb, try out the example for the number 1249580.  As we will see in the irb shortly, the first digit will be extracted as the leader.  So in rubular, just enter the number 249580.  Notice how in rubular the digits 249 are highlighted.  These numbers will have themselves replaced with 249, once we do the interpolating.</p>

<p>Ok, lets take this to the irb!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2.1.0 :001 &gt; decimal = Integer(1249580).to_s
</span><span class='line'> =&gt; "1249580" 
</span><span class='line'>2.1.0 :002 &gt; leader = decimal.slice!(0, decimal.length % 3)
</span><span class='line'> =&gt; "1" 
</span><span class='line'>2.1.0 :003 &gt; decimal.gsub!(/\d{3}(?!$)/,'\0,')
</span><span class='line'> =&gt; "249,580" 
</span><span class='line'>2.1.0 :004 &gt; decimal = nil if decimal.empty?
</span><span class='line'> =&gt; nil 
</span><span class='line'>2.1.0 :005 &gt; leader  = nil if leader.empty?
</span><span class='line'> =&gt; nil 
</span><span class='line'>2.1.0 :006 &gt; 
</span><span class='line'>2.1.0 :007 &gt;   [leader,decimal].compact.join(",")
</span><span class='line'> =&gt; "1,249,580" 
</span><span class='line'>2.1.0 :008 &gt; </span></code></pre></td></tr></table></div></figure>


<p>I hope this follow up post has helped to illustrate how all the components of our original method of dissection work.  Going through the research and stepping through a few examples has helped me a lot.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Almost Free Blog]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/19/almost_free_blog/"/>
    <updated>2014-02-19T20:55:00-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/19/almost_free_blog</id>
    <content type="html"><![CDATA[<p>Would you like to have your own super cool blog but don&rsquo;t want to go through the hassel of setting up WordPress?  Or maybe you don&rsquo;t have your own hosting service like DreamHost but still want a blog.  Are you bummed out since Apple killed off iWeb?</p>

<p>Well the good news is there is a nice solution for us programmers.  And it can be free if you don&rsquo;t want a custom domain name.  For this site, the only cost was purchasing the domain name &ndash; oldguynewtrick.com.  I&rsquo;m a fan of Hover for domain registration (<a href="http://hover.com">http://hover.com</a>) This site is powered by the Open Source application called Octopress (<a href="http://octopress.org">http://octopress.org</a>) and hosted, for FREE, on GitHub.</p>

<p>If you don&rsquo;t have a GitHub account, and you are a programmer, what the heck are you waiting for?  You can get a free GitHub account, hop on over to <a href="http://github.com">http://github.com</a>  (There are paid versions as well.)</p>

<p>In a future posting I will go over the steps that I performed in order to setup an Octopress powered site on GitHub.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[To Book or Not to Book]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/19/book_or_ebooks/"/>
    <updated>2014-02-19T18:13:25-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/19/book_or_ebooks</id>
    <content type="html"><![CDATA[<p>While the focus, and majority of posts I plan on making, will revolve around the world of Ruby and web devlopement, my journey began with <em>&ldquo;Programming in Objective-C,&rdquo;</em> by Stephen G. Kochan.  While still persuing iOS and Objective-C knowledge, I also got <em>&ldquo;iOS Programming The Big Nerd Ranch Guide,&rdquo;</em> by Joe Conway &amp; Aaron Hillegass.  Shortly after I grabbed <em>&ldquo;Objective-C Programming The Big Nerd Ranch Guide,&rdquo;</em> by Aaron Hillegass.</p>

<p>Wadding through those books I quickly realized that I had a huge lack of knowledge, and though I really wanted to write iPhone apps, I needed to reboot and try a different approach.  I found an online course via iTunes-U which used the next book I purchased &ndash; <em>&ldquo;The Art &amp; Science of Java, An Introduction to Computer Science,&rdquo;</em> by Eric S. Roberts.  This book is used with the online course I subscribed to in iTunes, and by far the most expensive book I have purchased!  While reading that book, and following the course, I realized another gap in knowledge.  A lot of buzzwords were flying at me &ndash; OOP, Object Oriented Design, UML, Singleton, Design Patterns, etc.  So I did a little research on Amazon, and grabbed two new books by Head First &ndash; <em>&ldquo;Object-Oriented Analysis &amp; Design,&rdquo;</em> by McLaughlin, Pollice &amp; West and <em>&ldquo;Design Patterns,&rdquo;</em> by Freeman &amp; Freeman.  The Head First books used Java in their examples and I thought things were coming together. My Rails journey actually started because of <em>&ldquo;Object-Oriented Analysis &amp; Design&rdquo;</em> book.</p>

<p>Alrighty, lets now dive into the here and now.  My first Ruby/Rails book, and the one I would first suggest to anyone new to Rails, was <em>&ldquo;Ruby on Rails Tutorial,&rdquo;</em> by Michael Hartl.  This book won&rsquo;t be the end of your journey, but should give one enough to get a good understanding.  I plan on re-reading this book after I get through some others.  The next book I grabbed was probably way above my level, but I really enjoyed how this person thinks after watching some of her videos &ndash; <em>&ldquo;Practical Object-Oriented Design In Ruby,&rdquo;</em> by Sandi Metz.  Though a bit over my head for a good chunk of the book, I still found it very useful and I think I will understand more of what she wrote as I learn and experience more code.</p>

<p>The next book I got was <em>&ldquo;Agile Web Development with Rails 3.2,&rdquo;</em> by Sam Ruby, Dave Thomas, and David Heinemeier Hansson.  I found this to be very useful for filling in some gaps I had from the Rails Tuts book.  I happened to notice after I bought the book that a newer version would come out later in the year.  So I pre-ordered <em>&ldquo;Agile Web Development with Rails 4,&rdquo;</em> by the same trio.  I have not ready beyond the first chapter of this book yet.</p>

<p>One thing I was noticing from my reading experience of the two Rails books and the POODR book, I lacked some basic knowledge of the underlying language &ndash; Ruby.  So I grabbed <em>&ldquo;The Ruby Way,&rdquo;</em> by Hal Fulton.  I&rsquo;ve finished about half of the book and it cleared some things up for me.  I do use it as a reference from time-to-time and do want to get back into it for the second half.  Note I think this is the oldest of the Ruby/Rails books I have, so it isn&rsquo;t current.  But the majority of what you would read should still be relevant.</p>

<p>It might just be me, but I&rsquo;ve found that frequently I need information from multiple sources in order for me to understand certain topics.  So while <em>&ldquo;The Ruby Way&rdquo;</em> is very comprehensive, I picked up <em>&ldquo;The Ruby Programming Language,&rdquo;</em> by David Flanagan &amp; Yukikiro Matsumoto.  This book covered Ruby 1.8 and 1.9 so it was a little more up to date than the previous mentioned book.  Where as those first two book on Ruby will give you the meat of the language, I found this next book to be the sauce &ndash; <em>&ldquo;Eloquent Ruby,&rdquo;</em> by Russ Olsen.</p>

<p>I skipped a book, and in all honesty, I don&rsquo;t remember where in the order of books purchased that this one occurred.  I&rsquo;ve only read the first chapter and I like the book, but my mindset isn&rsquo;t ready for it.  I&rsquo;ll probably get virtually whipped for saying that, but I will revisit this book &ndash; <em>&ldquo;The RSpec Book,&rdquo;</em> by David Chelimsky.  For those new to Ruby and don&rsquo;t understand why I would be whipped, I&rsquo;ve found that the Ruby/Rails community is heavily into testing &ndash; BDD (behaviour driven-development) or TDD (test driven-devlopment).  I know this is an area I need to focus on!</p>

<p>Winding down there are a few more books.  I picked up the next book because I wanted more information on creating command line Ruby applications, so I purchased <em>&ldquo;Build Awesome Command-Line Applications in Ruby 2,&rdquo;</em> by David Bryant Copeland.  I really am enjoying this book and I&rsquo;m applying some of the things I&rsquo;ve learned to how I code work related stuff in Perl.</p>

<p>Although not directly related to Ruby or Rails, I picked up <em>&ldquo;The Little Book on CoffeeScript,&rdquo;</em> by Alex MacCaw.  They were not kidding, it is little!  I can&rsquo;t really say anything good about this book yet as I was disappointed at its size when it arrived.  I tossed it aside to read some other time &ndash; maybe on a rainy day.  The other non-directly related book I am enjoying is &ndash; <em>&ldquo;Practical Vim,&rdquo;</em> by Drew Neil.  I&rsquo;ve always admirred people who are awesome at the command line and in tools like Vim.  I&rsquo;m not one of them.  My preferred editor is Sublime Text, but I really want to learn Vim.  This book is good, and Drew produces some cool screencasts &ndash; <a href="http://vimcasts.org.">http://vimcasts.org.</a></p>

<p>Down to my last two physical books as of 2/19/2014 &ndash; <em>&ldquo;Ruby Under a Microscope,&rdquo;</em> by Pat Shaughnessy and <em>&ldquo;Seven Databases in Seven Weeks,&rdquo;</em> by Eric Redmond and Jim R. Wilson.  <em>&ldquo;Ruby Under a Microscope&rdquo;</em> is probably not a good fit for someone new to Ruby, but I&rsquo;m finding it absolutely enjoyable.  Sure there are things above my head, but I am able to digest most of the information and it actually helps me understand the language better.  I just received the Seven Databases book and haven&rsquo;t had a chance to read it yet.</p>

<p>All of the above are physical books I&rsquo;ve purchased in my persuit of learning to code.  I&rsquo;ve also purchases a few eBooks which I will list next.  I&rsquo;m not a huge fan of eBooks related to programming as I find the formatting tends to get screwed up when the authors try to show code blocks.  With that said, on my Kindle I have:  <em>&ldquo;Confident Ruby,&rdquo;</em> by Avdi Grimm, <em>&ldquo;Professional JavaScript for Web Developers,&rdquo;</em> by Nicholas C. Zakas, and <em>&ldquo;CoffeeScript Programming with jQuery, Rails and Node.js,&rdquo;</em> by Michael Erasmus.</p>

<p>There are two other books, and I wasn&rsquo;t going to inlude them, but just in case you want books on CakePHP or PHP Zend Framework, I strongly urge you TO STAY AWAY from: <em>&ldquo;Easy PHP Websites with The Zend Framework,&rdquo;</em> by W. Jason Gilmore, and <em>&ldquo;CakePHP 1.3 Application Development Cookbook,&rdquo;</em> by Mario Iglesias.  These two books are horrible!</p>

<h2>Apology</h2>

<p>When I first skechted out the list of books in my arsenal, it didn&rsquo;t look to be to long.  But as we can see from the above, when I wrapped words around the book names, this post got pretty long.  So I apologize for that.  I will make a great effort going forward to keep my posts shorter.  If needed, break up a long topic into multiple posts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code & Coffee (2)]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/18/Coffee_And_Code/"/>
    <updated>2014-02-18T19:10:15-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/18/Coffee_And_Code</id>
    <content type="html"><![CDATA[<p>My journey to learn Ruby and Rails started almost one year ago.  I&rsquo;m embarrased to admit, aside from a couple of lunch meetings, I&rsquo;ve been traveling down this road on my own.  Being new to the language and community, plus the fact that I&rsquo;m an introvert, I found it hard to get out and meet fellow programmers.</p>

<p>Near the end of last year I decided to try and conquer my fear and looking back on it, I probably should have started with a smaller introduction to the Ruby community.  In November of last year I attended Ruby Conf 2013 in Miami, Florida.  Don&rsquo;t get me wrong, I enjoyed almost everything about my experience there.  But I felt so out of place.  I went by myself and had no clue on what to expect.</p>

<p>After my experience with Ruby Conf, I decided that I need to take a more gentle approach to entering the fabulous programming community.  I looked up RubyJax since I live in Jacksonville, FL.  I saw that they host many events &ndash; most at the Hash Rocket office at Jax Beach.</p>

<p>So I&rsquo;ve signed up for as many meet ups as I could, which include <em>&ldquo;Code and Coffee.&rdquo;</em>  This was hard for me on a couple of levels.  First, I still feel inadequate as new member of the Ruby community.  Second, I work from home and am really not a morning person.  To get up at 6:15am so I have time to shower and drive to Jax Beach is a bit tough.  It was especially tough for me today, my second Code &amp; Coffee, because I was not feeling 100%.  I enjoyed going last week but in my mind it was clear I was the new guy and I felt really dumb as I was surrounded by so many great programmers.</p>

<p>Then something happened.  At this second Code &amp; Coffee, I wasn&rsquo;t the new guy anymore.  A new member showed up, I believe his name was Michael, and I was able to talk with him and give some advice based on my experience as a new person to the Ruby community.  I hadn&rsquo;t realized how far I have come in my journey.  Don&rsquo;t get me wrong, I still have far to go, but when that light bulb went off in my head, it really brightened my day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dissect A Method]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/16/dissect_a_method/"/>
    <updated>2014-02-16T22:20:25-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/16/dissect_a_method</id>
    <content type="html"><![CDATA[<p>I recently purchased a copy of &ldquo;Confident Ruby&rdquo; by Avdi Grimm.  I have not gotten
far in the book yet, but I am enjoying it.  In the chapter titled &ldquo;Use built-in
conversion functions&rdquo; I came across a block of code that made me pause.  Being a
new recruit of the Ruby Army, I only have a grasp on the basics.  The method that
I have below probably makes sense to an experienced Rubyist, and other programming
veterans, but to me it didn&rsquo;t.  I wanted to know exactly what each line of code
meant, and what was going on.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def pretty_int(value)
</span><span class='line'>  decimal = Integer(value).to_s
</span><span class='line'>  leader  = decimal.slice!(0, decimal.length % 3)
</span><span class='line'>  decimal.gsub!(/\d{3}(?!$)/,'\0,')
</span><span class='line'>  decimal = nil if decimal.empty?
</span><span class='line'>  leader  = nil if leader.empty?
</span><span class='line'>  [leader,decimal].compact.join(",")
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>First we are setting a variable, decimal, equal to the result of passing whatever we submitted for &lsquo;value&rsquo; to the conversion function, Integer, which then gets converted to a string via the to_s method.</p>

<p>We can confirm that decimal is a string if we add a little code after that first line above:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  decimal = Integer(value).to_s
</span><span class='line'>  puts "Class of decimal: #{decimal.class}"</span></code></pre></td></tr></table></div></figure>


<p>Simulated:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2.1.0 :001 &gt; decimal = Integer(400).to_s
</span><span class='line'> =&gt; "400" 
</span><span class='line'>2.1.0 :002 &gt; decimal.class
</span><span class='line'> =&gt; String 
</span><span class='line'>2.1.0 :003 &gt; </span></code></pre></td></tr></table></div></figure>


<p>Looking back at our original six lines of code, the first one is understandable.  The next two, the ones with slice! and gsub! I&rsquo;m not so sure about.  The only thing I know for sure is that when we have a method with the bang character ! that means we are changing the value in place, it modifies the receiver.  Let&rsquo;s jump over these two lines of code for the moment.</p>

<p>The next two lines, the ones with the if condition, I understand.  What they are saying is that if decimal is empty (true), then set decimal equal to nil.  The same goes for leader, if leader is empty, set it to nil.  Methods that have a question mark ? should return a boolean &ndash; either true or false.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  decimal = nil if decimal.empty?
</span><span class='line'>  leader  = nil if leader.empty?</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>The last line of code in this method is bringing our data together, formatting the number to use a comma after the value of leader if we have a value in decimal as well.</p>

<p>Ok, so we nailed down the first line of the method and the last three.  Now what is going on in lines two and three?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  #...
</span><span class='line'>  leader  = decimal.slice!(0, decimal.length % 3)
</span><span class='line'>  decimal.gsub!(/\d{3}(?!$)/,'\0,')</span></code></pre></td></tr></table></div></figure>


<p>It looks like we are trying to set a value of something to the leader variable by performing some actions on the decimal variable.  In the above code we are passing a starting position of 0 to the slice! method and an ending postion of decimal.length % 3.  Let&rsquo;s try this out using irb:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2.1.0 :011 &gt; decimal = Integer(6234).to_s
</span><span class='line'> =&gt; "6234" 
</span><span class='line'>2.1.0 :012 &gt; decimal.length % 3
</span><span class='line'> =&gt; 1 
</span><span class='line'>2.1.0 :013 &gt; decimal.slice!(0,1)
</span><span class='line'> =&gt; "6" 
</span><span class='line'>2.1.0 :014 &gt; </span></code></pre></td></tr></table></div></figure>


<p>From the example above, leader would be set to a value of &ldquo;6&rdquo;.  Let&rsquo;s try another example using a smaller number:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2.1.0 :016 &gt; decimal = Integer(49).to_s
</span><span class='line'> =&gt; "49" 
</span><span class='line'>2.1.0 :017 &gt; decimal.length % 3
</span><span class='line'> =&gt; 2 
</span><span class='line'>2.1.0 :018 &gt; decimal.slice!(0,2)
</span><span class='line'> =&gt; "49" 
</span><span class='line'>2.1.0 :019 &gt; </span></code></pre></td></tr></table></div></figure>


<p>What the heck, let&rsquo;s throw one more example, this time using a bigger number:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2.1.0 :019 &gt; decimal = Integer(1032578).to_s
</span><span class='line'> =&gt; "1032578" 
</span><span class='line'>2.1.0 :020 &gt; decimal.length % 3
</span><span class='line'> =&gt; 1 
</span><span class='line'>2.1.0 :021 &gt; decimal.slice!(0,1)
</span><span class='line'> =&gt; "1" 
</span><span class='line'>2.1.0 :022 &gt; </span></code></pre></td></tr></table></div></figure>


<p>Seems like this is making sense.  Lets put one more example up, this time tying things together so we can see both decimal and leader:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2.1.0 :001 &gt; decimal = Integer(4794).to_s
</span><span class='line'> =&gt; "4794" 
</span><span class='line'>2.1.0 :002 &gt; decimal.length
</span><span class='line'> =&gt; 4 
</span><span class='line'>2.1.0 :003 &gt; decimal.length % 3
</span><span class='line'> =&gt; 1 
</span><span class='line'>2.1.0 :004 &gt; leader = decimal.slice!(0,1)
</span><span class='line'> =&gt; "4" 
</span><span class='line'>2.1.0 :005 &gt; decimal
</span><span class='line'> =&gt; "794" 
</span><span class='line'>2.1.0 :006 &gt; </span></code></pre></td></tr></table></div></figure>


<p>Ah!  So we now have leader set to &ldquo;4&rdquo; and decimal has been sliced down to &ldquo;794&rdquo;.  Recall that the method name is pretty_int and the purpose of this method is to make numbers look pretty.  In other words, we want our numbers to have commas where appropriate.  So in the example of submitting 4794, we want our method to return a value of 4,794.  If our submitted number is smaller, we don&rsquo;t need the comma, and if the number is larger, say 1032578, we would like it to be formatted as:  1,032,578.</p>

<p>We are almost there &ndash; just need to figure out how that other line of code works.  We can have a safe assumption that gsub will do a substitution.  But exactly how is this code suppose to work.  Lets look at it again:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  decimal.gsub!(/\d{3}(?!$)/,'\0,')</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s drop back into irb and see if we can make some sense of this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2.1.0 :001 &gt; decimal = Integer(4793).to_s
</span><span class='line'> =&gt; "4793" 
</span><span class='line'>2.1.0 :002 &gt; leader = decimal.slice!(0, decimal.length % 3)
</span><span class='line'> =&gt; "4" 
</span><span class='line'>2.1.0 :003 &gt; decimal.gsub!(/\d{3}(?!$)/,'\0,')
</span><span class='line'> =&gt; nil 
</span><span class='line'>2.1.0 :004 &gt; decimal
</span><span class='line'> =&gt; "793" 
</span><span class='line'>2.1.0 :005 &gt; leader
</span><span class='line'> =&gt; "4" 
</span><span class='line'>2.1.0 :006 &gt; [leader,decimal].compact.join(",")
</span><span class='line'> =&gt; "4,793" 
</span><span class='line'>2.1.0 :007 &gt; </span></code></pre></td></tr></table></div></figure>


<p>I have a basic understanding of what is going on, but I&rsquo;m still not very comfortable with Regular Expressions, which is what we are passing to the slice! method above.  How about another example?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2.1.0 :007 &gt; decimal = Integer(1249580).to_s
</span><span class='line'> =&gt; "1249580" 
</span><span class='line'>2.1.0 :008 &gt; leader = decimal.slice!(0, decimal.length % 3)
</span><span class='line'> =&gt; "1" 
</span><span class='line'>2.1.0 :009 &gt; decimal.gsub!(/\d{3}(?!$)/,'\0,')
</span><span class='line'> =&gt; "249,580" 
</span><span class='line'>2.1.0 :010 &gt; [leader,decimal].compact.join(",")
</span><span class='line'> =&gt; "1,249,580" 
</span><span class='line'>2.1.0 :011 &gt; </span></code></pre></td></tr></table></div></figure>


<p>Think I&rsquo;m almost there with my understanding.  I&rsquo;m going to take a look at one more example using irb:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2.1.0 :011 &gt; decimal = Integer(56752).to_s
</span><span class='line'> =&gt; "56752" 
</span><span class='line'>2.1.0 :012 &gt; leader = decimal.slice!(0, decimal.length % 3)
</span><span class='line'> =&gt; "56" 
</span><span class='line'>2.1.0 :013 &gt; decimal.gsub!(/\d{3}(?!$)/,'\0,')
</span><span class='line'> =&gt; nil 
</span><span class='line'>2.1.0 :014 &gt; decimal
</span><span class='line'> =&gt; "752" 
</span><span class='line'>2.1.0 :015 &gt; leader
</span><span class='line'> =&gt; "56" 
</span><span class='line'>2.1.0 :016 &gt; [leader,decimal].compact.join(",")
</span><span class='line'> =&gt; "56,752" 
</span><span class='line'>2.1.0 :017 &gt; </span></code></pre></td></tr></table></div></figure>


<p>Once the slice! operation has completed, we have part of our number stored in leader and the remainder in decimal.  For every group of more than 3 numbers in decimal, we will do a substitution and insert a comma.  I know what is happening, but I&rsquo;m still having a hard time properly describing what is going on, and how it knows where to place the commas.  I&rsquo;ll need to bone up on RegEx!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby, RVM, Cmd Line SheBang!]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/12/command_line_apps_rvm/"/>
    <updated>2014-02-12T10:56:35-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/12/command_line_apps_rvm</id>
    <content type="html"><![CDATA[<p>I ran across this tip while reading the book <em>&ldquo;Build Awesome Command-Line Applications
in Ruby 2,&rdquo;</em> by David Bryant Copeland.  Although most of the code I&rsquo;ve been practicing
has been Ruby on Rails, at my day job we utilize a lot of command line applications.  I&rsquo;m on a mission to add Ruby to our toolbox which currently is Perl and shell scripts.</p>

<p>For a recent project I needed a command line application that could take a CSV
file as an input, extract out some data, and create a new pipe (|) delimted text
file.  I use RVM on my personal laptop and desktop, so I installed it on our
company server.  At that time, Ruby was at version 1.93.  Not too long after, I
added 2.0.0 and 2.1.0.  But my application was written in 1.93.  It is a simple
application so the version shouldn&rsquo;t matter.  But in case it does, you may find
value in this tip.</p>

<p>If you are a RVM user, and type the command &lsquo;which ruby&rsquo; at the command line, you
may get something similar to:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/Users/jfhogarty/.rvm/rubies/ruby-2.1.0/bin/ruby</span></code></pre></td></tr></table></div></figure>


<p>You can use that as the first line of your ruby script:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/Users/jfhogarty/.rvm/rubies/ruby-2.1.0/bin/ruby</span></code></pre></td></tr></table></div></figure>


<p>However, if you want your script to use whatever the current version of Ruby is,
or if Ruby is in a different location on a machine other than yours, you can use this syntax:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/usr/bin/env ruby</span></code></pre></td></tr></table></div></figure>


<p>This tip is found on page 4, in the section: &ldquo;Shebang: How the Systems Knows an App Is A Ruby Script&rdquo;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Take Your Education, Online!]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/10/online_education/"/>
    <updated>2014-02-10T19:10:15-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/10/online_education</id>
    <content type="html"><![CDATA[<p>In my quest for knowledge, I&rsquo;ve come across a myraid of good online resources.  In today&rsquo;s blog I will share with you what sites I have found to be useful &ndash; some are free and some are not.</p>

<p>After struggling a bit in my pursuit of creating my idea using the Zend PHP framework, I bumped into a guy, Shay, who pointed me in the direction of Rails.  I remember clearly two sites he told me to check out:</p>

<p><a href="http://railscasts.com">http://railscasts.com</a> and <a href="http://tryruby.org">http://tryruby.org</a></p>

<p>Upon completing the tryruby online course I believe it suggested that I visit the site:  <a href="http://railsforzombies.org.">http://railsforzombies.org.</a>  Both the tryruby.org and railsforzombies.org sites are products of <a href="http://codeschool.com.">http://codeschool.com.</a>  Code School has both free and pay-for content.  After completing their free courses, and viewing some of the free episodes of Code TV, I signed up for a yearly membership.</p>

<p>Another site I ran into was <a href="https://peepcode.com/.">https://peepcode.com/.</a>  I liked what I saw with some of their free episodes and I signed up for a year membership.  Shortly after, Peep Code was picked up by Plural Sight and my membership was transferred at no additional cost.  This was a great deal!  I got access to everything I had previously at Peep Code, plus a ton of new great content at Plural Sight.</p>

<p>I&rsquo;ve also viewed some of the free content at <a href="http://teamtreehouse.com/.">http://teamtreehouse.com/.</a>  I like what I have seen so far, but have not yet signed up for their service.  They are a bit more pricey than Code School and Plural Sight.  Part of the reason I&rsquo;m holding off with Treehouse is because I&rsquo;m seriously considering a boot camp.</p>

<p>Boot Camps &ndash; There are both physical and online boot camps available.  I work full time and don&rsquo;t really want to travel to New York or San Francisco at this time.  So in my search of online education, I&rsquo;ve narrowed down three that look promising &ndash; <a href="http://bloc.io,">http://bloc.io,</a> <a href="http://gotealeaf.com">http://gotealeaf.com</a> and <a href="http://thinkful.com.">http://thinkful.com.</a>  So far bloc.io is my first choice, but I need to reach out to Tea Leaf Academy for more information.</p>

<p>Wrapping up, I want to share a few more resources.  Although these are not directly related to Ruby or Rails, they do fit in with expanding ones education in programming.  First, I really want to get better with Vim and you can watch free screencasts on vim over at: <a href="http://vimcasts.org/">http://vimcasts.org/</a></p>

<p>I&rsquo;m still not very comfortable around JavaScript and CoffeeScript so I like these two sites:  <a href="http://coffeescript.org">http://coffeescript.org</a> and <a href="http://jsforcats.com/">http://jsforcats.com/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/08/introduction/"/>
    <updated>2014-02-08T20:01:25-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/08/introduction</id>
    <content type="html"><![CDATA[<p>Welcome to my blog.  I&rsquo;m just an old guy that is trying to learn new tricks every day.  Well, I&rsquo;m an old guy in the sense that my daughter came up to me one day and asked if I had used quills to write with when I was in school.  Though I did use a quill in art class it wasn&rsquo;t because that is all we had &ndash; it was just to illustrate how the tool worked.</p>

<p>There is a saying along the lines of <em>&ldquo;You can&rsquo;t teach an old dog new tricks.&rdquo;</em>  I don&rsquo;t really believe this and I thought I&rsquo;d twist the words a bit and use it as a catchy domain name, thus &ndash; OldGuyNewTrick.com</p>

<p>I don&rsquo;t consider myself old as a mid-forties guy, but for keeping with the fun, I&rsquo;ll play the role of an old guy and the context of a &lsquo;trick&rsquo; is me learning how to code in Ruby and Rails.  Well actually web development in general, but the focus is on Ruby and Rails.</p>

<p>I will leverage this blog to document my journey and share my experiences.  Years ago I had toyed with blogs and tools like WordPress.  I really hadn&rsquo;t given any thought to starting a new blog until I heard several well known people in the Ruby community, for example Ben Orenstein, suggest that if one is a programmer, they should have a blog.</p>

<p>Will anyone ever read this?  Why have a blog?  At first I disagreed with them and wasn&rsquo;t going to do it.  But it was like the universe was talking to me.  The topic of having a blog kept coming up in conversations, podcasts, and screencasts.  And I had a thought &ndash; even if no one reads this but me, it will still be useful.  By writing down my experiences I will have a good reference to look back on.  I may figure out a solution to a problem this week, and have a similar one a year from now.  But being an old guy, I may not remember, so I can refer back to this blog.</p>

<p>I am not well known in the programming community, but I plan on making a dent in the community.  On twitter and github I go by hogihung.  I wouldn&rsquo;t get all giddy and jump over to GitHub to see what I&rsquo;ve done &ndash; you&rsquo;ll be disappointed.  Remeber, I&rsquo;m new at this.  All I have is learning demos up there at the moment.</p>

<p>Ho Gi Hung is my Chinese name and I tend to use it as my internet persona.  My given name is John F. Hogarty, glad to meet you.</p>

<p style="text-align:center;"><img src="http://hogihung.github.io/images/avatar_jh.jpg" width="80" alt="My Avatar" /></p>

<p>One last item to note &ndash; this blog is created using Octopress and hosted on GitHub.  I&rsquo;m still learning how all this works, so please bear with me as I work out the kinks.  :)</p>
]]></content>
  </entry>
  
</feed>
