<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Education | Old Guy, New Trick]]></title>
  <link href="http://hogihung.github.io/blog/categories/education/atom.xml" rel="self"/>
  <link href="http://hogihung.github.io/"/>
  <updated>2014-03-29T11:18:16-04:00</updated>
  <id>http://hogihung.github.io/</id>
  <author>
    <name><![CDATA[Ho Gi Hung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Week 2 and a half at Bloc]]></title>
    <link href="http://hogihung.github.io/blog/2014/03/29/week-2-and-a-half-at-bloc/"/>
    <updated>2014-03-29T10:02:23-04:00</updated>
    <id>http://hogihung.github.io/blog/2014/03/29/week-2-and-a-half-at-bloc</id>
    <content type="html"><![CDATA[<p>The first week of my training at Bloc went by very fast. For the most part it was a review of information/knowledge I had already gained, but was still worth it.  I had wanted to create another blog post earlier, but the completion of the second block took longer than I had anticipated.</p>

<p>So here we are, about about 2.5 weeks in. The second block, titled Rails Foundation, should take one about 40 hours.  At least that is the estimated time for completion.  If I wasn&rsquo;t working full-time, maybe I could have completed this block in one week.</p>

<p>The Rails Foundation block is composed of 20 checkpoints.  We learned a lot of concepts, and habits in those checkpoints.  There was some review for me, for example the lesson introduced the Devise gem.  I&rsquo;ve played with this a little bit so had some comfort with that checkpoint.  Though I did learn some new things related to Devise.</p>

<p>A totally new experience for me was when did the Authorization checkpoint, and was introduced to the Pundit gem.  I would say that Pundit is a little bit like CanCan.  I&rsquo;ve dabbled with CanCan a little bit, but I find Pundit to be pretty good.  I&rsquo;ll have a tough choice to make when it comes time for my Capstone project.  Should I go with Pundit, or revist CanCan (or CanCanCan.)</p>

<p>Another topic that I found useful, because it helped me with a task at my day job, was the lesson on Seeding.  While our main environment at work is Perl, I&rsquo;m slowing trying to sneak in some Ruby and Rails.  Leveraging some of the knowledge gained in the Seeding lesson, I was able to expand on that knowledge and compose my first rake task for populating my models with data in CSV files.  Ok, I&rsquo;m a bit off topic, steer back John!</p>

<p>There were two area where my progress slowed to a crawl in the second block.  The first was related to uploading images.  Recently Bloc added a Rails 4.x track and it looks like some of the lesson code examples are missing.  I wasn&rsquo;t able to see my Choose File option for uploading an image.  A trip to the Chat Room and a small wait for my turn, and my issue was solved by Xander.  Xander is great!  Everytime I&rsquo;ve had a question, he seems to be in the chat room and helps me out.</p>

<p>The second area I had trouble with was nesting.  I&rsquo;ll admit that I&rsquo;m still 100% solid with what I&rsquo;ve learned about nesting, but I&rsquo;m confident things will become clearer as I see and utilize more code.  During one of the lessons related to this nesting of Topics, Posts and Comments, I got stuck real bad.  I went to the chat room for help, but it was just at the time for that shift to end for the day.  Xander stayed for a few minutes and helped a lot.  But I was still stuck.</p>

<p>I was worried that all the changes I had made may have broken something.  So I fired off an email to my mentor to let him know I was stuck and to be prepared for a nice long chat the next day when we were scheduled to meet.  We meet the next day and he helped get me fixed in less than 5 minutes.  My eyes were so focused around the code and didn&rsquo;t &ldquo;see&rdquo; the code.  I had several silly mistakes.  For example I used the plural version instead of singular for a particular item/method.  Or I had a misplaced period.  And other issue, I had the order of a ) and a period mixed up.  Simple things for the trained eye.  It was great to have the mentor there to help me through what I thought was a major <em>fsk</em> up on my part.</p>

<p>Needless to say, I made some more punctuation type mistakes on the remaing checkpoints in this block.  But since I suffered so much earlier in the block, I was much more aware of what to look for.  The hard part for me now is when I see an error message, and know basically what is wrong, I don&rsquo;t yet have the experience to provide the solution.  But I&rsquo;m eagerly working at improving my problem solution skills.  :)</p>

<p>As I write this post, again about 2.5, well maybe 2.75 weeks in, I&rsquo;m now on the third Block &ndash; Features / Testing / Javascript.  This block is also estimated to take 40 hours.  There are 10 checkpoints and I&rsquo;ve completed the first 4 so far.  But now I&rsquo;m really entering an area of unfamiliarity.  Upcoming in this block is RSpec and Ajax.  Two areas that have close to zero amount of knowledge and experience.</p>

<p>Stay tuned for my next update.  This coming week I will be going to Ancient City Ruby so I&rsquo;m not sure if I&rsquo;ll have the time to complete the third block.  But once I have completed it, I will post my thoughts here.</p>

<p>Happy Learning!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Week At Bloc]]></title>
    <link href="http://hogihung.github.io/blog/2014/03/15/first-week-at-bloc/"/>
    <updated>2014-03-15T19:46:34-04:00</updated>
    <id>http://hogihung.github.io/blog/2014/03/15/first-week-at-bloc</id>
    <content type="html"><![CDATA[<p>About two weeks ago I was trying to decide which on-line web developer education solution I would enroll in.  The decision was not easy.  Along with the weekly time requirements, roughly 25 hours per week, the financial cost is nothing to shrug off.  In the end I choose Bloc (<a href="http://www.bloc.io">http://www.bloc.io</a>)</p>

<p>My training at Bloc started this past Monday, March 10th.  The Bloc course runs about 12 weeks, broken down into four segments:</p>

<pre><code>1.  Environment Setup / Programming with Ruby
2.  Rails Foundation
3.  Features/Testing/Javascript
4.  Project Challenges
</code></pre>

<p>I&rsquo;ve just finished item 1 &ndash; Environment Setup / Programming with Ruby.  When I read the description of this section my first thought was, &ldquo;this should be easy.&rdquo;  I have been exploring Ruby and Rails for almost a year.  I&rsquo;ve installed RVM on several computers, worked with GitHub and Heroku, as well as several introductory tutorials.</p>

<p>And many of sub-sections in this first track were a nice and quick completion for me.  But, through each sub-section, I did learn something new.  For example, while working on setting up an app on Heroku, I learned how to add support for New Relic.  I&rsquo;ve seen ads and mention of New Relic a lot while learning Rails but never took a look at it.  Now I&rsquo;ve had a nice gentle introduction.</p>

<p>There are 20 sub-section to Environment Setup / Programming with Ruby.  I felt good and confident as I traversed through them one by one.  I was slowed down briefly in sub-section 14 &ndash; Arrays.  One of the exercises there introduced me to new code and techniques I had not yet experienced.  I love learning new stuff!</p>

<p>As I rounded out this section, I found myself staring at my nemesis &ndash; Blocks.  I don&rsquo;t know why, but I seem to have a mental <em>block</em> when it comes to Blocks (as well as Procs and Lambdas.)  This section took me a bit and I had to reach out for help.</p>

<p>In the Bloc program, each student has a mentor.  We have around 3 calls a week with our mentors.  When I got stuck it was after I had last talked with my mentor.  Not a problem &ndash; Bloc also has a staffed on-line chat room.  I popped in to the chat room and asked a question.  One of the staff there gave me a nudge.  After about 30 minutes I was still stuck.  I had gotten further, but still hadn&rsquo;t solved the problem.  Another question/discussion in the chat room and it became clear.  I was able to complete the lesson.  <strong>Happy Dance!</strong></p>

<p>I look forward to my next call with my mentor (tomorrow) and starting my next section &ndash; Rails Foundation.  As I progress through each section I&rsquo;ll return here to provide updates.</p>

<p>Happy Learning!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[In search of mentor]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/28/in-search-of-mentor/"/>
    <updated>2014-02-28T17:15:32-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/28/in-search-of-mentor</id>
    <content type="html"><![CDATA[<p>When I began my journey to become a better programmer, I didn&rsquo;t have a clear path.  I had been programming in Perl for my day job, and I have ideas sketched out for some web and mobile apps.  Most the programming I do at work is for single task automation or data lookup.  I want to be a better programmer at work, and I want to see my ideas in use for myself and others.</p>

<p>I reached out to a friend of mine in early 2012.  I shared with him some of my buisness and software ideas.  He has a lot of experience as an entrepreneur, and as a software developer.  When I finally settled on working on my software projects, we had several discussion sessions together and he helped point me in a direction.  I started to learn the Zend framework as I had some previous experience hacking away at php based websites.  My progress went slow, buy my friend, Bill, helped to gently nudge me in the appropriate direction and answer my battery of questions.  I&rsquo;m sure it must have been tough for him as I had a lot of questions and kept switching what I was trying to focus on.</p>

<p>Fast forward to about this time in 2013.  I was a little frustrated with myself and slow progress.  It took me a real long time to get the user registration and login part of my app working.  I realized that I had major gaps in core programming knowledge.  Using Amazon.com I found some books to study (see my post &ldquo;To Book or Not to Book&rdquo;.)  While reading one of these books I ran into a guy who was the catalyst in rebooting my programming journey.  He, Shane, introduced me to Ruby on Rails.</p>

<p>Shane told me about some online resources to help get me started &ndash; the ones at CodeSchool and RailsCasts.  I went back to Amazon and ordered the Hartl book.  With my nose in the books, laptop comfortably on my lap, I started studying Ruby and Rails.  The beginner resources I came across were excellent.  I found a much better selection of books and online resources from the Ruby community, especially compared to PHP which I had previously been studying.  My &ldquo;home schooling&rdquo; was going well.</p>

<p>What took me over a month to learn and do in PHP, the user registration/login code of my website, I was able to learn and complete in a weekend using Rails.  For me, learning Ruby and Rails is actually fun.  I feel that I have been able to comprehend the basics, and some intermediate stuff pretty well just by reading or watching online videos (both free and paid for.)  But I&rsquo;ve noticed that I&rsquo;m starting to hit some more challenging concepts and material.</p>

<p>My application has some models that aren&rsquo;t as simple as a one-to-one, or one-to-many relationship.  My app needs to interact with the user for more than just simple data entry. I&rsquo;m seeing that I need to learn more about JavaScript/CoffeeScript and jQuery.  I&rsquo;m having issues with Geolocation.  The concepts are getting a little more complicated for me.  I need someone to talk to and work through these challenges.  I need a more structured learning environment where I&rsquo;m able to ask questions for topics I do not understand.  Thus my search for more knowledge.</p>

<p>Since I work full time, I had some contraints to work within.  Either I needed to find some programming courses at a local college, that I could attend at night, or find some on-line resource.  While I find my subscriptions to CodeSchool, RailsCasts and PluralSight useful, the draw back is I can&rsquo;t ask questions when I get stuck.  Off to Google I went to start my search.  I was overwhelmed by how many different solutions there are.  One can review a pretty good list of solutions at the Quora site <a href="http://www.quora.com/Programming-Bootcamps/What-are-the-short-term-3-12mo-development-bootcamps-academies-around-the-world">http://www.quora.com/Programming-Bootcamps/What-are-the-short-term-3-12mo-development-bootcamps-academies-around-the-world</a></p>

<p>Some of the more popular sites I found were, in no particular order: <a href="http://www.launchacademy.com/">http://www.launchacademy.com/</a>  <a href="http://www.appacademy.io/">http://www.appacademy.io/</a> <a href="http://www.thinkful.com/">http://www.thinkful.com/</a>  <a href="http://www.gotealeaf.com/">http://www.gotealeaf.com/</a>  <a href="http://devbootcamp.com/">http://devbootcamp.com/</a> <a href="https://www.bloc.io/">https://www.bloc.io/</a>  <a href="https://training.bignerdranch.com">https://training.bignerdranch.com</a>  <a href="http://www.hackreactor.com/">http://www.hackreactor.com/</a> and <a href="https://learn.thoughtbot.com/">https://learn.thoughtbot.com/</a></p>

<p>Off the above though, only four seemed to fit my criteria of being able to attend on-line, at my own time: Bloc, Thinkful, Teaeaf Academy and Thoughbot.  The pricing for these courses are roughly in the same price range, with Bloc being the most expensive.  But Bloc costs more for a good reason I feel &ndash; more time with a mentor.  I talked with people from Bloc and Thinkful &ndash; both of them had a live session to code with a mentor.  Bloc seems more proactive in having numerous info sessions and answering questions from potential students.</p>

<p>Through my research and conversations, I&rsquo;ve narrowed my search down to Bloc and Tealeaf.  Tealeaf is getting a strong consideration because one of their founders is a Hashrocket alumni which I found out about after talking with two folks from Hashrocket.  But Bloc is the leader and I&rsquo;ve pre-registered with them.  I wish Tealeaf had hosted some info sessions so I could get a taste of how they work.  I&rsquo;m still considering them as their course is broken down into 3 components, with the last one covering advanced concepts.  Upon completion of Bloc, I may enroll in that third course.</p>

<p>I&rsquo;ve had exposure to three mentors at Bloc.  Each one has impressed me.  Keep an eye out for my follow up posts regarding how my training goes with Bloc.  I have a mentor in mind, but I will not know for sure until I get through the formal registration and enrollment.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[To Book or Not to Book]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/19/book_or_ebooks/"/>
    <updated>2014-02-19T18:13:25-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/19/book_or_ebooks</id>
    <content type="html"><![CDATA[<p>While the focus, and majority of posts I plan on making, will revolve around the world of Ruby and web devlopement, my journey began with <em>&ldquo;Programming in Objective-C,&rdquo;</em> by Stephen G. Kochan.  While still persuing iOS and Objective-C knowledge, I also got <em>&ldquo;iOS Programming The Big Nerd Ranch Guide,&rdquo;</em> by Joe Conway &amp; Aaron Hillegass.  Shortly after I grabbed <em>&ldquo;Objective-C Programming The Big Nerd Ranch Guide,&rdquo;</em> by Aaron Hillegass.</p>

<p>Wadding through those books I quickly realized that I had a huge lack of knowledge, and though I really wanted to write iPhone apps, I needed to reboot and try a different approach.  I found an online course via iTunes-U which used the next book I purchased &ndash; <em>&ldquo;The Art &amp; Science of Java, An Introduction to Computer Science,&rdquo;</em> by Eric S. Roberts.  This book is used with the online course I subscribed to in iTunes, and by far the most expensive book I have purchased!  While reading that book, and following the course, I realized another gap in knowledge.  A lot of buzzwords were flying at me &ndash; OOP, Object Oriented Design, UML, Singleton, Design Patterns, etc.  So I did a little research on Amazon, and grabbed two new books by Head First &ndash; <em>&ldquo;Object-Oriented Analysis &amp; Design,&rdquo;</em> by McLaughlin, Pollice &amp; West and <em>&ldquo;Design Patterns,&rdquo;</em> by Freeman &amp; Freeman.  The Head First books used Java in their examples and I thought things were coming together. My Rails journey actually started because of <em>&ldquo;Object-Oriented Analysis &amp; Design&rdquo;</em> book.</p>

<p>Alrighty, lets now dive into the here and now.  My first Ruby/Rails book, and the one I would first suggest to anyone new to Rails, was <em>&ldquo;Ruby on Rails Tutorial,&rdquo;</em> by Michael Hartl.  This book won&rsquo;t be the end of your journey, but should give one enough to get a good understanding.  I plan on re-reading this book after I get through some others.  The next book I grabbed was probably way above my level, but I really enjoyed how this person thinks after watching some of her videos &ndash; <em>&ldquo;Practical Object-Oriented Design In Ruby,&rdquo;</em> by Sandi Metz.  Though a bit over my head for a good chunk of the book, I still found it very useful and I think I will understand more of what she wrote as I learn and experience more code.</p>

<p>The next book I got was <em>&ldquo;Agile Web Development with Rails 3.2,&rdquo;</em> by Sam Ruby, Dave Thomas, and David Heinemeier Hansson.  I found this to be very useful for filling in some gaps I had from the Rails Tuts book.  I happened to notice after I bought the book that a newer version would come out later in the year.  So I pre-ordered <em>&ldquo;Agile Web Development with Rails 4,&rdquo;</em> by the same trio.  I have not ready beyond the first chapter of this book yet.</p>

<p>One thing I was noticing from my reading experience of the two Rails books and the POODR book, I lacked some basic knowledge of the underlying language &ndash; Ruby.  So I grabbed <em>&ldquo;The Ruby Way,&rdquo;</em> by Hal Fulton.  I&rsquo;ve finished about half of the book and it cleared some things up for me.  I do use it as a reference from time-to-time and do want to get back into it for the second half.  Note I think this is the oldest of the Ruby/Rails books I have, so it isn&rsquo;t current.  But the majority of what you would read should still be relevant.</p>

<p>It might just be me, but I&rsquo;ve found that frequently I need information from multiple sources in order for me to understand certain topics.  So while <em>&ldquo;The Ruby Way&rdquo;</em> is very comprehensive, I picked up <em>&ldquo;The Ruby Programming Language,&rdquo;</em> by David Flanagan &amp; Yukikiro Matsumoto.  This book covered Ruby 1.8 and 1.9 so it was a little more up to date than the previous mentioned book.  Where as those first two book on Ruby will give you the meat of the language, I found this next book to be the sauce &ndash; <em>&ldquo;Eloquent Ruby,&rdquo;</em> by Russ Olsen.</p>

<p>I skipped a book, and in all honesty, I don&rsquo;t remember where in the order of books purchased that this one occurred.  I&rsquo;ve only read the first chapter and I like the book, but my mindset isn&rsquo;t ready for it.  I&rsquo;ll probably get virtually whipped for saying that, but I will revisit this book &ndash; <em>&ldquo;The RSpec Book,&rdquo;</em> by David Chelimsky.  For those new to Ruby and don&rsquo;t understand why I would be whipped, I&rsquo;ve found that the Ruby/Rails community is heavily into testing &ndash; BDD (behaviour driven-development) or TDD (test driven-devlopment).  I know this is an area I need to focus on!</p>

<p>Winding down there are a few more books.  I picked up the next book because I wanted more information on creating command line Ruby applications, so I purchased <em>&ldquo;Build Awesome Command-Line Applications in Ruby 2,&rdquo;</em> by David Bryant Copeland.  I really am enjoying this book and I&rsquo;m applying some of the things I&rsquo;ve learned to how I code work related stuff in Perl.</p>

<p>Although not directly related to Ruby or Rails, I picked up <em>&ldquo;The Little Book on CoffeeScript,&rdquo;</em> by Alex MacCaw.  They were not kidding, it is little!  I can&rsquo;t really say anything good about this book yet as I was disappointed at its size when it arrived.  I tossed it aside to read some other time &ndash; maybe on a rainy day.  The other non-directly related book I am enjoying is &ndash; <em>&ldquo;Practical Vim,&rdquo;</em> by Drew Neil.  I&rsquo;ve always admirred people who are awesome at the command line and in tools like Vim.  I&rsquo;m not one of them.  My preferred editor is Sublime Text, but I really want to learn Vim.  This book is good, and Drew produces some cool screencasts &ndash; <a href="http://vimcasts.org.">http://vimcasts.org.</a></p>

<p>Down to my last two physical books as of 2/19/2014 &ndash; <em>&ldquo;Ruby Under a Microscope,&rdquo;</em> by Pat Shaughnessy and <em>&ldquo;Seven Databases in Seven Weeks,&rdquo;</em> by Eric Redmond and Jim R. Wilson.  <em>&ldquo;Ruby Under a Microscope&rdquo;</em> is probably not a good fit for someone new to Ruby, but I&rsquo;m finding it absolutely enjoyable.  Sure there are things above my head, but I am able to digest most of the information and it actually helps me understand the language better.  I just received the Seven Databases book and haven&rsquo;t had a chance to read it yet.</p>

<p>All of the above are physical books I&rsquo;ve purchased in my persuit of learning to code.  I&rsquo;ve also purchases a few eBooks which I will list next.  I&rsquo;m not a huge fan of eBooks related to programming as I find the formatting tends to get screwed up when the authors try to show code blocks.  With that said, on my Kindle I have:  <em>&ldquo;Confident Ruby,&rdquo;</em> by Avdi Grimm, <em>&ldquo;Professional JavaScript for Web Developers,&rdquo;</em> by Nicholas C. Zakas, and <em>&ldquo;CoffeeScript Programming with jQuery, Rails and Node.js,&rdquo;</em> by Michael Erasmus.</p>

<p>There are two other books, and I wasn&rsquo;t going to inlude them, but just in case you want books on CakePHP or PHP Zend Framework, I strongly urge you TO STAY AWAY from: <em>&ldquo;Easy PHP Websites with The Zend Framework,&rdquo;</em> by W. Jason Gilmore, and <em>&ldquo;CakePHP 1.3 Application Development Cookbook,&rdquo;</em> by Mario Iglesias.  These two books are horrible!</p>

<h2>Apology</h2>

<p>When I first skechted out the list of books in my arsenal, it didn&rsquo;t look to be to long.  But as we can see from the above, when I wrapped words around the book names, this post got pretty long.  So I apologize for that.  I will make a great effort going forward to keep my posts shorter.  If needed, break up a long topic into multiple posts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Take Your Education, Online!]]></title>
    <link href="http://hogihung.github.io/blog/2014/02/10/online_education/"/>
    <updated>2014-02-10T19:10:15-05:00</updated>
    <id>http://hogihung.github.io/blog/2014/02/10/online_education</id>
    <content type="html"><![CDATA[<p>In my quest for knowledge, I&rsquo;ve come across a myraid of good online resources.  In today&rsquo;s blog I will share with you what sites I have found to be useful &ndash; some are free and some are not.</p>

<p>After struggling a bit in my pursuit of creating my idea using the Zend PHP framework, I bumped into a guy, Shay, who pointed me in the direction of Rails.  I remember clearly two sites he told me to check out:</p>

<p><a href="http://railscasts.com">http://railscasts.com</a> and <a href="http://tryruby.org">http://tryruby.org</a></p>

<p>Upon completing the tryruby online course I believe it suggested that I visit the site:  <a href="http://railsforzombies.org.">http://railsforzombies.org.</a>  Both the tryruby.org and railsforzombies.org sites are products of <a href="http://codeschool.com.">http://codeschool.com.</a>  Code School has both free and pay-for content.  After completing their free courses, and viewing some of the free episodes of Code TV, I signed up for a yearly membership.</p>

<p>Another site I ran into was <a href="https://peepcode.com/.">https://peepcode.com/.</a>  I liked what I saw with some of their free episodes and I signed up for a year membership.  Shortly after, Peep Code was picked up by Plural Sight and my membership was transferred at no additional cost.  This was a great deal!  I got access to everything I had previously at Peep Code, plus a ton of new great content at Plural Sight.</p>

<p>I&rsquo;ve also viewed some of the free content at <a href="http://teamtreehouse.com/.">http://teamtreehouse.com/.</a>  I like what I have seen so far, but have not yet signed up for their service.  They are a bit more pricey than Code School and Plural Sight.  Part of the reason I&rsquo;m holding off with Treehouse is because I&rsquo;m seriously considering a boot camp.</p>

<p>Boot Camps &ndash; There are both physical and online boot camps available.  I work full time and don&rsquo;t really want to travel to New York or San Francisco at this time.  So in my search of online education, I&rsquo;ve narrowed down three that look promising &ndash; <a href="http://bloc.io,">http://bloc.io,</a> <a href="http://gotealeaf.com">http://gotealeaf.com</a> and <a href="http://thinkful.com.">http://thinkful.com.</a>  So far bloc.io is my first choice, but I need to reach out to Tea Leaf Academy for more information.</p>

<p>Wrapping up, I want to share a few more resources.  Although these are not directly related to Ruby or Rails, they do fit in with expanding ones education in programming.  First, I really want to get better with Vim and you can watch free screencasts on vim over at: <a href="http://vimcasts.org/">http://vimcasts.org/</a></p>

<p>I&rsquo;m still not very comfortable around JavaScript and CoffeeScript so I like these two sites:  <a href="http://coffeescript.org">http://coffeescript.org</a> and <a href="http://jsforcats.com/">http://jsforcats.com/</a></p>
]]></content>
  </entry>
  
</feed>
