<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Old Guy, New Trick]]></title>
  <link href="http://hogihung.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://hogihung.github.io/"/>
  <updated>2014-09-16T07:51:13-04:00</updated>
  <id>http://hogihung.github.io/</id>
  <author>
    <name><![CDATA[Ho Gi Hung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reflecting on Rails Inflections]]></title>
    <link href="http://hogihung.github.io/blog/2014/09/16/reflect-on-inflectors/"/>
    <updated>2014-09-16T08:26:35-04:00</updated>
    <id>http://hogihung.github.io/blog/2014/09/16/reflect-on-inflectors</id>
    <content type="html"><![CDATA[<p>Recently I re-discovered an issue I ran into about 8 months ago.  I am re-writing an application I created for work.  The first version was written in Ruby 1.9.x and Rails 3.x.  I built the app using sticks and glue &ndash; no testing.</p>

<p>We are migrating to Ruby 2.1.x and Rails 4.1.x and rather than copy over the app and tweak it, I wanted to take a better approach, a TDD approach.</p>

<p>It is a pretty simple application, with two main models &ndash; Baytech and Device.  A Baytech can have zero to many devices, and a device should only belong to one baytech.</p>

<p>To frameout my two models I used the following:</p>

<p><code>
rails g model baytech
rails g model device
</code></p>

<p>Everything seemed fine at first.  Until I started writing tests and code then I re-discovered a blast from the past.  What I didn&rsquo;t catch was that Rails, with its vast knowledge, pluralized both baytech and device as:</p>

<blockquote><ul>
<li>bayteches</li>
<li>devices</li>
</ul>
</blockquote>

<p>Now, all is cool with the plural version of device as devices.  But the plural of baytech is baytechs.  Oh crap, what do I do?</p>

<p>The first time this happened to me, it took me a while to figure out what the heck was going on.  Eventually all roads let me to the file config/initializers/inflections.rb</p>

<p>Taking a look inside this file, I found the following, or something similar:</p>

<p>```</p>

<h1>Be sure to restart your server when you modify this file.</h1>

<h1>Add new inflection rules using the following format. Inflections</h1>

<h1>are locale specific, and you may define rules for as many different</h1>

<h1>locales as you wish. All of these examples are active by default:</h1>

<h1>ActiveSupport::Inflector.inflections(:en) do |inflect|</h1>

<h1>inflect.plural /^(ox)$/i, &lsquo;\1en&rsquo;</h1>

<h1>inflect.singular /^(ox)en/i, &lsquo;\1&rsquo;</h1>

<h1>inflect.irregular &lsquo;person&rsquo;, &lsquo;people&rsquo;</h1>

<h1>inflect.uncountable %w( fish sheep )</h1>

<h1>end</h1>

<h1>These inflection rules are supported but not enabled by default:</h1>

<h1>ActiveSupport::Inflector.inflections(:en) do |inflect|</h1>

<h1>inflect.acronym &lsquo;RESTful&rsquo;</h1>

<h1>end</h1>

<p>```</p>

<p>To cure my issue, I had to make one small change to this file, making use of inflect.irregular:</p>

<p><code>
ActiveSupport::Inflector.inflections do |inflect|
  inflect.irregular 'baytech', 'baytechs'
end
</code></p>

<p>Once that change was made, anytime there was a need for the plural version of baytech, Rails knew to use baytechs.  Yeah!</p>

<p><em>Learn Something New Every Day</em></p>
]]></content>
  </entry>
  
</feed>
